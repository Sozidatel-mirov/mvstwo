@model mvstwo.Model.OkeiSiteContext;
@{
    // Получаем HttpContext из контекста представления
    var httpContext = Context.Request.HttpContext;
    // Получаем значение параметра IdCok из строки запроса
    int idContent = Convert.ToInt32(httpContext.Request.Query["IdCok"]);
    int idTestBlock = Model.TestBlocks.FirstOrDefault(q => q.VirtualTrainer == idContent).Id;
    int idTest = Model.Tests.FirstOrDefault
    (q => q.Id == Model.TestBlocks.FirstOrDefault(q => q.VirtualTrainer == idContent).Test).Id;
    mvstwo.Model.VirtualTrainer virtualTrainer = Model.VirtualTrainers.FirstOrDefault(q=>q.Id == idContent);
    mvstwo.Model.Eom eom = Model.Eoms.FirstOrDefault(q=>q.Id == virtualTrainer.Eom);
}
    
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Site</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
</head>

<h2>Создание темы для цифрового образовательного контента</h2>
<p>
    <label>Задание</label><br />
    <input type="text" asp-for="@virtualTrainer.DescriptionCase" style="width: 50%;" />
</p>
<p hidden>
    <label>Тема</label><br />
    <input type="text" asp-for="@virtualTrainer.Eom" style="width: 50%;" />
</p>
<p hidden>
    <label>Тема</label><br />
    <input type="text" asp-for="@virtualTrainer.Id" style="width: 50%;" />
</p>
<form id="editForm" asp-action="edit" asp-controller="CokMain" method="post">
    
    
@* <p>
    <label>Тема</label><br />
    <input type="text" asp-for="@Model.TestBlocks.FirstOrDefault(q=>q.VirtualTrainer == idContent).Textlection" style="width: 50%;" />
</p>
    <p hidden>
        <label>тренажёр</label><br />
        <input type="text" asp-for="@Model.TestBlocks.FirstOrDefault(q=>q.VirtualTrainer == idContent).VirtualTrainer" style="width: 50%;" />
    </p>
    <p hidden>
        <label>код</label><br />
        <input type="text" asp-for="@Model.TestBlocks.FirstOrDefault(q=>q.VirtualTrainer == idContent).Id" style="width: 50%;" />
    </p>
    <p hidden>
        <label>тест</label><br />
        <input type="text" asp-for="@Model.TestBlocks.FirstOrDefault(q=>q.VirtualTrainer == idContent).Test" style="width: 50%;" />
    </p> *@
        <p>
            <label>Текст вопроса</label><br />
        <input type="text" asp-for="@Model.Quests.FirstOrDefault(q=>q.Test == idTest).TextQuest" style="width: 50%;" />
        </p>
        <p hidden>
            <label>Тест id</label><br />
        <input type="text" asp-for="@Model.Quests.FirstOrDefault(q=>q.Test == idTest).Id" style="width: 50%;" />
        </p>
        <p hidden>
            <label>Теcn num</label><br />
        <input type="text" asp-for="@Model.Quests.FirstOrDefault(q=>q.Test == idTest).Test" style="width: 50%;" />
        </p>

    <p>
        <input type="submit" value="Сохранить" />
    </p>
</form> 
<br/><br/>

@{
    int i = 1;
}
@foreach (mvstwo.Model.Answer answer in Model.Answers.Where(q => q.Quest == @Model.Quests.FirstOrDefault(q => q.Test == idTest).Id))
{
    <form id="editForm1-@answer.Id" asp-action="edit2" asp-controller="CokMain" method="post">
        <p>
            <label>Ответ @i</label><br />
            <input type="text" asp-for="@answer.TextAnswers" style="width: 50%;" />
        </p>
        <p hidden>
            <label>Ответ 1</label><br />
            <input type="text" asp-for="@answer.Id" style="width: 50%;" />
        </p>
        <p hidden>
            <label>Ответ 1</label><br />
            <input type="text" asp-for="@answer.Quest" style="width: 50%;" />
        </p>
        <p hidden>
            <label>Ответ 1</label><br />
            <input type="text" asp-for="@answer.IsCorrect" style="width: 50%;"/>
        </p>
        @{
            i++;
        }
        <p>
            <input type="submit" value="Сохранить" />
        </p>
    </form>
}
 
 <script>
    document.getElementById('editForm').addEventListener('submit', function (event) {
        event.preventDefault(); // Предотвращаем стандартное поведение формы

        var formData = new FormData(this); // Получаем данные формы

        fetch('/CokMain/Edit', { // Замените на правильный URL вашего метода действия
            method: 'POST',
            body: formData
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Ошибка сервера: ' + response.status);
                }
                // Если ответ успешный, не делаем ничего, так как мы остаемся на текущей странице
            })
            .catch(error => {
                console.error('Ошибка отправки формы:', error);
                // Обработка ошибки (если нужно)
            });
    });
</script>
<script>
    document.getElementById('editCok').addEventListener('submit', function (event) {
        event.preventDefault(); // Предотвращаем стандартное поведение формы

        var formData = new FormData(this); // Получаем данные формы

        fetch('/CokMain/editCok', { // Замените на правильный URL вашего метода действия
            method: 'POST',
            body: formData
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Ошибка сервера: ' + response.status);
                }
                // Если ответ успешный, не делаем ничего, так как мы остаемся на текущей странице
            })
            .catch(error => {
                console.error('Ошибка отправки формы:', error);
                // Обработка ошибки (если нужно)
            });
    });

</script>
<script>
    document.querySelectorAll('[id^="editForm1-"]').forEach(form => {
        form.addEventListener('submit', function (event) {
            event.preventDefault(); // Предотвращаем стандартное поведение формы

            var formData = new FormData(this); // Получаем данные формы

            fetch(this.action, { // Используем URL действия формы
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Ошибка сервера: ' + response.status);
                    }
                    // Если ответ успешный, не делаем ничего, так как мы остаемся на текущей странице
                })
                .catch(error => {
                    console.error('Ошибка отправки формы:', error);
                    // Обработка ошибки (если нужно)
                });
        });
    });
</script>
