@model mvstwo.Model.OkeiSiteContext;
@{
    // Получаем HttpContext из контекста представления
    var httpContext = Context.Request.HttpContext;
    // Получаем значение параметра IdCok из строки запроса
    string idCok = httpContext.Request.Query["IdCok"];
    int idCoknow = Convert.ToInt32(idCok);
    int idContent = Model.Contents.FirstOrDefault(q => q.IdCoks == idCoknow).Id;
     
    int idEom3 = Model.Eoms.FirstOrDefault(q=>q.Id == Model.Contents.FirstOrDefault(q=>q.Id == idContent).IdEom3).Id;
    var cok = Model.Coks.FirstOrDefault(q => q.Id == Convert.ToInt32(idCok));
    List<mvstwo.Model.VirtualTrainer> trainersV3 = Model.VirtualTrainers.Where(q => q.Eom == idEom3).ToList();
    mvstwo.Model.Content content = Model.Contents.FirstOrDefault(q=>q.IdCoks == idCoknow);
}
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Site</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
</head>
<div class="main">
    <header class="header">
        <div class="container">
            <div class="inner2">
                <nav>
                    <img src="/image/logo.png" width="80" height="46" alt="">
                </nav>
                <h1>Цифровой образовательный контент</h1>
                <div class="login">
                    <a class="name-box_item_user" data-id="78325">@ViewBag.rar</a>
                </div>
                <div class="menu">
                    <span style="font: size 40px;cursor:pointer; color: #2e57ed;margin-left: auto;"
                          onclick="openNav()">☰</span>
                    <div id="mySidenav" class="sidenav">
                        <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">×</a>
                        <a asp-controller="CokMain" asp-action="Main">Главная</a>
                        <a asp-controller="CokMain" asp-action="ProfileTeacher">Личный кабинет</a>
                        <a asp-controller="CokMain" asp-action="LogOut">Выйти</a>
                    </div>
                    <script type="text/javascript" src="/app.js">   </script>
            </div>
        </div>
                
    </header>
</div>
<h2>Создание темы для цифрового образовательного контента</h2>
<form id="editCok" asp-action="editCok" asp-controller="CokMain" method="post">
    <p>
        <label>Тема</label><br />
        <input type="text" asp-for="@Model.Coks.FirstOrDefault(q => q.Id == idCoknow).Theme" style="width: 50%;" />
    </p>
    <p>
        <label>МДК</label><br />
        <input type="text" asp-for="@Model.Coks.FirstOrDefault(q => q.Id == idCoknow).Mdk" style="width: 50%;" />
    </p>
    <p>
        <label>Профессиональный модуль</label><br />
        <input type="text" asp-for="@Model.Coks.FirstOrDefault(q => q.Id == idCoknow).Pm" style="width: 50%;" />
    </p>
    <p hidden>
        <label>Тест id</label><br />
        <input type="text" asp-for="@Model.Coks.FirstOrDefault(q => q.Id == idCoknow).Id" style="width: 50%;" />
    </p>
    <p hidden>
        <label>Тест id</label><br />
        <input type="text" asp-for="@Model.Coks.FirstOrDefault(q => q.Id == idCoknow).Contents" style="width: 50%;" />
    </p>
    <p hidden>
        <label>Тест id</label><br />
        <input type="text" asp-for="@Model.Coks.FirstOrDefault(q => q.Id == idCoknow).Spo" style="width: 50%;" />
    </p>
    <p hidden>
        <label>Тест id</label><br />
        <input type="text" asp-for="@Model.Coks.FirstOrDefault(q => q.Id == idCoknow).IdTeacher" style="width: 50%;" />
    </p>
    <p>
        <input type="submit" value="Сохранить" />
    </p>
</form>
    <br />
    <br />
<form id="editEom" asp-action="editEom" asp-controller="CokMain" method="post">
    <p>
        <label>ЕОМ 1</label><br />
        <input type="text" asp-for="@Model.Eoms.FirstOrDefault(q => q.Id == content.IdEom1).Name" style="width: 50%;" />
    </p>
    <p hidden>
        <label>Ответ 1</label><br />
        <input type="text" asp-for="@Model.Eoms.FirstOrDefault(q => q.Id == content.IdEom1).Id" style="width: 50%;" />
    </p>
</form>
<form asp-action="editLectionPage" asp-controller="CokMain" method="get">
    <input type="number" name="IdCok" value="@idCoknow" readonly hidden>
    <div class="flex_row" id="buttons_list_36762">
        <button class="button"
                type="submit">
            Изменить ЭОМ
        </button>
    </div>
</form>
<form id="editEom1" asp-action="editEom" asp-controller="CokMain" method="post">
    <p>
        <label>ЕОМ 2</label><br />
        <input type="text" asp-for="@Model.Eoms.FirstOrDefault(q => q.Id == content.IdEom2).Name" style="width: 50%;" />
    </p>
    <p hidden>
        <label>Ответ 1</label><br />
        <input type="text" asp-for="@Model.Eoms.FirstOrDefault(q => q.Id == content.IdEom2).Id" style="width: 50%;" />
    </p>
</form>
<form asp-action="editTrainerPage" asp-controller="CokMain" method="get">
    <input type="number" name="IdCok" value="@idCoknow" readonly hidden>
    <div class="flex_row" id="buttons_list_36762">
        <button class="button"
                type="submit">
            Изменить ЭОМ
        </button>
    </div>
</form>

<form id="editEom2" asp-action="editEom" asp-controller="CokMain" method="post">
    <p>
        <label>ЕОМ 3</label><br />
        <input type="text" asp-for="@Model.Eoms.FirstOrDefault(q => q.Id == content.IdEom3).Name" style="width: 50%;" />
    </p>
    <p hidden>
        <label>Ответ 1</label><br />
        <input type="text" asp-for="@Model.Eoms.FirstOrDefault(q => q.Id == content.IdEom3).Id" style="width: 50%;" />
    </p>
</form>
<form asp-action="editEomPage" asp-controller="CokMain" method="get">
    <input type="number" name="IdCok" value="@idCoknow" readonly hidden>
<div class="flex_row" id="buttons_list_36762">
    <button class="button"
            type="submit">
        Изменить ЭОМ
    </button>
</div>
</form>


<script>
    document.getElementById('editCok').addEventListener('submit', function (event) {
        event.preventDefault(); // Предотвращаем стандартное поведение формы

        var formData = new FormData(this); // Получаем данные формы

        fetch('/CokMain/editCok', { // Замените на правильный URL вашего метода действия
            method: 'POST',
            body: formData
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Ошибка сервера: ' + response.status);
                }
                // Если ответ успешный, не делаем ничего, так как мы остаемся на текущей странице
            })
            .catch(error => {
                console.error('Ошибка отправки формы:', error);
                // Обработка ошибки (если нужно)
            });
    });
    </script>
<script>
    document.getElementById('editEom').addEventListener('submit', function (event) {
        event.preventDefault(); // Предотвращаем стандартное поведение формы

        var formData = new FormData(this); // Получаем данные формы

        fetch('/CokMain/editEom', { // Замените на правильный URL вашего метода действия
            method: 'POST',
            body: formData
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Ошибка сервера: ' + response.status);
                }
                // Если ответ успешный, не делаем ничего, так как мы остаемся на текущей странице
            })
            .catch(error => {
                console.error('Ошибка отправки формы:', error);
                // Обработка ошибки (если нужно)
            });
    });
</script>
<script>
    document.getElementById('editEom1').addEventListener('submit', function (event) {
        event.preventDefault(); // Предотвращаем стандартное поведение формы

        var formData = new FormData(this); // Получаем данные формы

        fetch('/CokMain/editEom', { // Замените на правильный URL вашего метода действия
            method: 'POST',
            body: formData
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Ошибка сервера: ' + response.status);
                }
                // Если ответ успешный, не делаем ничего, так как мы остаемся на текущей странице
            })
            .catch(error => {
                console.error('Ошибка отправки формы:', error);
                // Обработка ошибки (если нужно)
            });
    });
</script>
<script>
    document.getElementById('editEom2').addEventListener('submit', function (event) {
        event.preventDefault(); // Предотвращаем стандартное поведение формы

        var formData = new FormData(this); // Получаем данные формы

        fetch('/CokMain/editEom', { // Замените на правильный URL вашего метода действия
            method: 'POST',
            body: formData
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Ошибка сервера: ' + response.status);
                }
                // Если ответ успешный, не делаем ничего, так как мы остаемся на текущей странице
            })
            .catch(error => {
                console.error('Ошибка отправки формы:', error);
                // Обработка ошибки (если нужно)
            });
    });
</script>

